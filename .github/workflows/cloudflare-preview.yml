name: Cloudflare Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    name: Deploy Preview to Cloudflare
    permissions:
      contents: read
      pull-requests: write
    env:
      CI: true
      PNPM_NO_FROZEN_LOCKFILE: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: |
          # Always use --no-frozen-lockfile for preview deployments
          # This handles any pnpm version mismatches between local and CI
          pnpm install --no-frozen-lockfile
      
      - name: Deploy to Cloudflare Workers
        if: github.event.action != 'closed'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          echo "Deploying PR #${{ github.event.pull_request.number }} to preview environment"
          echo "Branch: ${{ github.head_ref }}"
          echo "Commit: ${{ github.event.pull_request.head.sha }}"
          
          # Deploy using wrangler directly with custom name and BASE_URL
          npx wrangler deploy \
            --name cf-mcp-pr-${{ github.event.pull_request.number }} \
            --var BASE_URL=https://cf-mcp-pr-${{ github.event.pull_request.number }}.asi-cloud.workers.dev
        id: deploy
      
      - name: Extract preview URL
        if: github.event.action != 'closed'
        id: extract_url
        run: |
          # Extract URL from wrangler output or construct it from known pattern
          # Cloudflare preview URLs follow pattern: https://cf-mcp-pr-<PR_NUMBER>.<account>.workers.dev
          # or custom domain pattern if configured
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_URL="https://cf-mcp-pr-${PR_NUMBER}.asi-cloud.workers.dev"
          echo "preview_url=${PREVIEW_URL}" >> $GITHUB_OUTPUT
          echo "Preview URL will be: ${PREVIEW_URL}"
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('üöÄ Preview Deployment')
            );
            
            const previewUrl = '${{ steps.extract_url.outputs.preview_url }}';
            const commitSha = '${{ github.event.pull_request.head.sha }}';
            const shortSha = commitSha.substring(0, 7);
            const isClosed = '${{ github.event.action }}' === 'closed';
            
            const body = isClosed 
              ? 'üöÄ **Preview Deployment**\n\n' +
                '~~Your changes have been deployed to Cloudflare Workers!~~\n\n' +
                '**Status:** üî¥ **Deployment Removed**\n\n' +
                'This preview deployment has been automatically removed since the PR was closed/merged.\n\n' +
                '---\n' +
                '*Preview deployments are automatically cleaned up when PRs are closed.*'
              : 'üöÄ **Preview Deployment**\n\n' +
                'Your changes have been deployed to Cloudflare Workers!\n\n' +
                '**Preview URL:** ' + previewUrl + '\n\n' +
                '**MCP Endpoints:**\n' +
                '- SSE Transport: `' + previewUrl + '/sse`\n' +
                '- StreamableHttp Transport: `' + previewUrl + '/mcp`\n\n' +
                '**Test with MCP Inspector:**\n' +
                '```bash\n' +
                '# Test SSE transport\n' +
                'npx @modelcontextprotocol/inspector --cli ' + previewUrl + '/sse --method tools/list\n\n' +
                '# Test StreamableHttp transport\n' +
                'npx @modelcontextprotocol/inspector --cli ' + previewUrl + '/mcp --transport http --method tools/list\n' +
                '```\n\n' +
                '**Commit:** ' + shortSha + '\n' +
                '**Branch:** ${{ github.head_ref }}\n\n' +
                '---\n' +
                '*This comment will be updated on each new commit.*';
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
      
      - name: Check deployment health
        if: github.event.action != 'closed'
        run: |
          PREVIEW_URL="${{ steps.extract_url.outputs.preview_url }}"
          echo "Checking health of deployed preview..."
          
          # Wait a moment for deployment to be ready
          sleep 10
          
          # Check health endpoint
          if curl -f -s "${PREVIEW_URL}/health" > /dev/null; then
            echo "‚úÖ Preview deployment is healthy"
          else
            echo "‚ùå Preview deployment health check failed"
            exit 1
          fi
      
      - name: Run smoke tests
        if: github.event.action != 'closed'
        run: |
          PREVIEW_URL="${{ steps.extract_url.outputs.preview_url }}"
          echo "Running smoke tests against preview deployment..."
          
          # Test health endpoint with proper headers
          if curl -f -s "${PREVIEW_URL}/health" -H "Accept: application/json" > /dev/null; then
            echo "‚úÖ Health endpoint is responding"
          else
            echo "‚ùå Health endpoint check failed"
            # Don't fail the build for health check, just warn
          fi
          
          # Test MCP endpoints with proper headers
          if curl -s "${PREVIEW_URL}/mcp" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Accept: application/json, text/event-stream" \
            -H "Mcp-Session-Id: test-session" \
            -d '{"jsonrpc":"2.0","method":"initialize","params":{"protocolVersion":"2024-11-05","capabilities":{}},"id":1}' | jq -e '.result' > /dev/null; then
            echo "‚úÖ MCP endpoints responding correctly"
          else
            echo "‚ö†Ô∏è  MCP endpoints may require authentication"
            # Don't fail the build, as endpoints might require auth
          fi

      - name: Delete Preview Deployment
        if: github.event.action == 'closed'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          echo "Deleting preview deployment for PR #${{ github.event.pull_request.number }}"
          npx wrangler delete cf-mcp-pr-${{ github.event.pull_request.number }} || true