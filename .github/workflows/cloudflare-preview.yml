name: Cloudflare Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    name: Deploy Preview to Cloudflare
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: |
          # Note: Using --no-frozen-lockfile to handle potential lockfile version mismatches
          # This is safe for preview deployments as we're not modifying production
          pnpm install --no-frozen-lockfile
      
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env preview
          workingDirectory: .
          packageManager: pnpm
          preCommands: |
            echo "Deploying PR #${{ github.event.pull_request.number }} to preview environment"
            echo "Branch: ${{ github.head_ref }}"
            echo "Commit: ${{ github.event.pull_request.head.sha }}"
        id: deploy
      
      - name: Extract preview URL
        id: extract_url
        run: |
          # Extract URL from wrangler output or construct it from known pattern
          # Cloudflare preview URLs follow pattern: https://cf-mcp-pr-<PR_NUMBER>.<account>.workers.dev
          # or custom domain pattern if configured
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_URL="https://cf-mcp-pr-${PR_NUMBER}.asi-cloud.workers.dev"
          echo "preview_url=${PREVIEW_URL}" >> $GITHUB_OUTPUT
          echo "Preview URL will be: ${PREVIEW_URL}"
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🚀 Preview Deployment')
            );
            
            const previewUrl = '${{ steps.extract_url.outputs.preview_url }}';
            const commitSha = '${{ github.event.pull_request.head.sha }}';
            const shortSha = commitSha.substring(0, 7);
            
            const body = `🚀 **Preview Deployment**

Your changes have been deployed to Cloudflare Workers!

**Preview URL:** ${previewUrl}

**MCP Endpoints:**
- SSE Transport: \`${previewUrl}/sse\`
- StreamableHttp Transport: \`${previewUrl}/mcp\`

**Test with MCP Inspector:**
\`\`\`bash
# Test SSE transport
npx @modelcontextprotocol/inspector --cli ${previewUrl}/sse --method tools/list

# Test StreamableHttp transport  
npx @modelcontextprotocol/inspector --cli ${previewUrl}/mcp --transport http --method tools/list
\`\`\`

**Commit:** ${shortSha}
**Branch:** ${{ github.head_ref }}

---
*This comment will be updated on each new commit.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
      
      - name: Check deployment health
        run: |
          PREVIEW_URL="${{ steps.extract_url.outputs.preview_url }}"
          echo "Checking health of deployed preview..."
          
          # Wait a moment for deployment to be ready
          sleep 10
          
          # Check health endpoint
          if curl -f -s "${PREVIEW_URL}/health" > /dev/null; then
            echo "✅ Preview deployment is healthy"
          else
            echo "❌ Preview deployment health check failed"
            exit 1
          fi
      
      - name: Run smoke tests
        run: |
          PREVIEW_URL="${{ steps.extract_url.outputs.preview_url }}"
          echo "Running smoke tests against preview deployment..."
          
          # Test MCP endpoints are accessible
          if curl -f -s "${PREVIEW_URL}/mcp" -X POST -H "Content-Type: application/json" -d '{"jsonrpc":"2.0","method":"tools/list","id":1}' | jq -e '.result.tools | length > 0' > /dev/null; then
            echo "✅ MCP endpoints responding correctly"
          else
            echo "❌ MCP endpoints not responding as expected"
            exit 1
          fi

  cleanup-preview:
    runs-on: ubuntu-latest
    name: Cleanup Preview
    if: github.event.action == 'closed'
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Comment on PR closure
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('🚀 Preview Deployment')
            );
            
            if (botComment) {
              const body = `🚀 **Preview Deployment**

~~Your changes have been deployed to Cloudflare Workers!~~

**Status:** 🔴 **Deployment Removed**

This preview deployment has been automatically removed since the PR was closed/merged.

---
*Preview deployments are automatically cleaned up when PRs are closed.*`;
              
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            }